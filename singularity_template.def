BootStrap: docker
From: fedora:35


%post
    dnf install -y wget openssh-clients git
    cd /opt
    git clone https://github.com/<YOU>/MyPackage.jl
    wget https://julialang-s3.julialang.org/bin/linux/x64/1.7/julia-1.7.1-linux-x86_64.tar.gz
    mkdir -p /opt/julia
    mv julia-1.7.1-linux-x86_64.tar.gz /opt/julia
    cd /opt/julia
    tar -xf julia-1.7.1-linux-x86_64.tar.gz
    export PATH=/opt/julia/julia-1.7.1/bin:$PATH
    mkdir -p /opt/juliadepot
    export JULIA_DEPOT_PATH=/opt/juliadepot
    cd /opt/MyPackage.jl
    julia --project=/opt/MyPackage.jl -e 'using Pkg; Pkg.update(); Pkg.instantiate()'
    julia --project=/opt/MyPackage.jl -e 'using MyPackage'
    julia --project=/opt/MyPackage.jl -e 'using Pkg; Pkg.build("MyPackage")'
    julia --project=/opt/MyPackage.jl -e 'using Pkg; Pkg.test("MyPackage")'
    ## Interactive Julia will write to logs, but we don't want
    ## the container to be writable, so link it to tmpfs on host.
    rm -rf /opt/juliadepot/logs
    ln -s /dev/shm/ /opt/juliadepot/logs
    # Get rid of the packages not needed for runtime
    dnf remove -y wget openssh-clients git

%environment
    export LC_ALL=C
    export PATH=/opt/julia/julia-1.7.1/bin:$PATH
    export JULIA_DEPOT_PATH=/opt/juliadepot

%runscript
    echo "Container was created $NOW"
    echo "Arguments received: $*"
    echo pwd
    exec echo "$@"

%labels
    Author you@you.ca
    Version v0.4.2

%help
    singularity exec image.sif julia --project=/opt/MyCode.jl
